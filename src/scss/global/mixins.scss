$unit: rem !default;

// Item size
@mixin size($width, $height: $width) {
  @if unitless($width) {
    $width: $width + $unit;
  }
  @if unitless($height) {
    $height: $height + $unit;
  }
  width: $width;
  height: $height;
}

// Transition
@mixin trans($speed: 0.3, $easing: ease-in, $props: all) {
  transition: $props #{$speed}s $easing;
}

// Margin - bottom | top | left | right
@mixin marg($values...) {
  margin-bottom: #{nth($values, 1)}$unit;

  @if length($values) == 2 {
    margin-top: #{nth($values, 2)}$unit;
  }

  @if length($values) == 3 {
    margin-top: #{nth($values, 2)}$unit;
    margin-left: #{nth($values, 3)}$unit;
  }

  @if length($values) == 4 {
    margin-top: #{nth($values, 2)}$unit;
    margin-left: #{nth($values, 3)}$unit;
    margin-right: #{nth($values, 4)}$unit;
  }
}

// Padding - top | bottom | left | right
@mixin padd($values...) {
  padding-top: #{nth($values, 1)}$unit;

  @if length($values) == 2 {
    padding-bottom: #{nth($values, 2)}$unit;
  }

  @if length($values) == 3 {
    padding-bottom: #{nth($values, 2)}$unit;
    padding-left: #{nth($values, 3)}$unit;
  }

  @if length($values) == 4 {
    padding-bottom: #{nth($values, 2)}$unit;
    padding-left: #{nth($values, 3)}$unit;
    padding-right: #{nth($values, 4)}$unit;
  }
}

// Border radius & border
@mixin brr($radius: 0.5, $border...) {
  @if unitless($radius) {
    $radius: $radius + $unit;
  }

  border-radius: $radius;

  @if length($border) == 1 {
    border: #{$border}$unit solid #000;
  } @else if length($border) == 2 {
    border: #{nth($border, 1)}$unit nth($border, 2) #000;
  } @else if length($border) == 3 {
    border: #{nth($border, 1)}$unit nth($border, 2) nth($border, 3);
  }
}

// Generate li items
@mixin list($list) {
  @each $item in $list {
    li.#{$item} {
      background-image: url(images/#{$item}-icon.svg);
    }
  }
}

// Generate gradients with multiple colors
@mixin linear-gradient($direction, $gradients...) {
  background-color: nth($gradients, 1);
  background-image: linear-gradient($direction, $gradients...);
}

// Simple zebra style for tr in table
@mixin zebra-style($color) {
  tr:nth-child(odd) {
    background-color: $color;
  }
  tr:nth-child(even) {
    background-color: darken($color, 20%);
  }
}
